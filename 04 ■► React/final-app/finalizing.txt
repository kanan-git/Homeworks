≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈
GENERAL TOPICS TO FINALIZE PROJECT:

1. AUTHENTICATION:
    ~ register   —► fix user-data.js issue or save user data inside SignInOrUp.jsx
    - sign in
≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈
REACT FINAL PROJECT SHOPNET

1 + qalan butun page leri tamamla (sign in/up - form label ve inputlari, writing rules & alerts, fix issue vercel)
2 + components (filterAside complete with scss, make height same), butun popup window lari tamamla (failed, loading, 
overlay, success, privacy policy, terms and condition)
3 + component, page, popup lardaki eksiklikleri tamamla
4 + routing install ve usage, oyren ve tetbiq et (stack overflow, chatgpt, youtube, mdn, w3)
5 ~ dataflow*** - redux toolkit qos (store js, use also props somewhere which only require 1 place)
6 ~ qalan funksiyalar (search, sorting, filters, authentication - also signed profile money amount near nickname in header), 
add xmark button to myfav and mycart page itemcards, buy all button to my_cart, if logged a user, show logout settings ...
7 - guide txt (sass mobile responsivity, overall width scroll issue, sessionStorage, sign in up input writing rule and 
look 994 50 123 45 67, fix horizontal scroll issue css)
8 - load more button API request function on Products, map on Contact
9 - butun jsx ve scss fayllarini header daki kimi seliqeye sal, sector lara ayir
0 - if language="English" after change pages (authentication for example), language input set defaultValue="English" property
0 - fix issue itemView no scroll because to extended content, new image items, fix to scroll on axis Y only + onClick, present in bigScreen div



*** rdk store
~ 0. from userData to header (logged in or guest, logged id amount, profImg, username, dropdown), mycart, myfav, settings, itemview(if guest, buttons inactive)
+ 1. language to all "components, popups, pages"***** | use e.preventDefault() after all completed
+ 2. light or dark mode to all components, popups, pages
+ 3. authentication selected login or register (both switch buttons and form windows) by click buttons
~ 4. filtering - from header popup to products
~ 5. filtering - from homepage cards to products
~ 6. filter tags from filterAside, header topside dropdown, homepage cards
~ 7. itemView to purchaseCompleted when click to buy button
~ 8. itemView to favorite & cart when click to their own buttons (gather products info from userData with id)
~ 9. products to favorite & cart when click their buttons
*** props
~ 1. clicked productCard to itemView
~ 2. searching header input to products
~ 3. authentication object from signinorup to userData



***** work in progress | task: .
cm - header
cm - footer
cm - breadcrumb
pu - failedMessage
pu - successMessage
pu - termsAndConditions
pu - privacyPolicies
pg - about
pg - contact
pg - homepage
pg - itemview
pg - mycart
pg - myfav
pg - products
pg - purchase
pg - settings
pg - signinorup



cd 04\ ■►\ React/final-app
npm start



git add .
git commit -m "ShopNet day 42/60 | May 30, 2023 at 13:24"
git push origin master
git status
clear



after complete all, archivate project to gdrive & testing>archive folder for git, delete failed codes and additional useless //notes, make sectors in all components and css, deploy to git



01 - CREATE USERS: react js registration data how to keep (without JSON & API), how to edit text inside js database file with js (not backend) if its not necessary, 
put it into localStorage and use e.preventDefault() + figure out how to get new user registration into new object, not replace previous one
02 - SIGN IN FEATURE: login algoritm, when user logged, show different profile image, print name, balance on header, change menus on userpanel dropdown
03 - LOG OUT FEATURE: write log out algoritm, when user logged out, back to guest mode
04 - FAVORITE AND CART ARRAY OF USERS: add to favorites algoritm, it must work for individual user which each one keep only their clicked favorite button products
05 - PURCHASE: when user buy all cart items, clear all cart array, decrease user's balance amount, if balance is not enough to buy product or all cart items, print it 
with alert, use alert on favorite and cart pages too when they are empty, also in search result no found, final thing, when user click Buy button inside ItemView 
component, return data to Purchase Completed component
06 - POPUPS: when user registered, show Loading.jsx with setTimeout, alert you successfully signed up, then swap to login automaticly, when user click sign in, if 
information is correct show success popup, else failed popup
07 - SEARCHING: with redux toolkit, return searched keyword from Header.jsx to Products.jsx
08 - SORTING AND FILTER PRICE RANGE: write sorting algoritm, apply to API results
09 - FILTER TAGS: when user click to Products filter or Header topside dropdown or Homepage tags, return its value to Products component and filter products API 
result with category property
10 - REQUEST MORE DATA: in Products.jsx, when click "load more" button, fetch more 20 products object, if its not working with current API, find new website which 
give API
11 - PRODUCT IMAGE: in ItemView.jsx, remove leftside image thumbnails, fix css, show product data which clicked on Products.jsx
12 - MOBILE RESPONSIVITY: hide header and make it seems with a menu button, full screen and transformX from left, add 4 responsivity to each component and to their 
sections
13 - FIXES AND VERCEL: language data, light or dark mode, all of registered users, save in localStorage or sessionStorage, when pages change especially between 
authentication and rest of pages, gather language and LorD info from storage, fix authentication and product error to make them seem on Vercel, may also create 
Settings contents, changing password, edit other information
≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈